name:     Packaging

on:
  push:
    push:
      #tags:
        #- "v*"
      branches:
        - master

jobs:
  win_installer:
    name:           Build Windows installer
    runs-on:        windows-latest
    # if: "contains(github.event.head_commit.message, 'prepare_build')"

    steps:

      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: '6.8.3'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_mingw'

      - name: Variables and Qt 6 environment configuration
        shell: pwsh
        run: |
          Write-Output "${{ env.Qt6_DIR }}/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          Write-Output "${{ env.IQTA_TOOLS }}/mingw1310_64/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo ("METRO_COM_CNT=" + $(git rev-list HEAD --count)) >> $env:GITHUB_ENV


      - name: Compile and prepare Metronomek installer
        shell: pwsh
        run: |
          ./installs/Windows/build_installer.ps1
          echo ("METRO_VERSION=" + $((Get-Content .\build\VERSION.txt))) >> $env:GITHUB_ENV

      - name: move installer, prepare to upload
        shell: pwsh
        run: |
          echo "Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}-Windows-Installer.exe"
          Move-Item -Path .\build\installs\bin\Metronomek-*-Windows-Installer.exe -Destination "Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}-Windows-Installer.exe"

      - name: Upload installer to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: "Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}-Windows-Installer.exe"
          path: "D:/a/metronomek/metronomek/Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}-Windows-Installer.exe"


  # macos_dmg:
  #   name:           Build Mac dmg
  #   runs-on:        macos-10.15
  #   needs:          win_installer
  #   #if: "contains(github.event.commits[0].message, 'prepare_build')"
  #
  #   steps:
  #     - name: Select Xcode version for Mac
  #       uses: maxim-lobanov/setup-xcode@v1
  #       with:
  #         xcode-version: '11.7'
  #
  #     - name: Checkout code
  #       uses: actions/checkout@v
  #       with:
  #         fetch-depth: 0
  #
  #     - name: Set variables
  #       run: |
  #         VER=$(sed -n "9 p" CMakeLists.txt | awk -F" " '{ print $2 }' | sed 's/\"//g' | sed 's/)//g')
  #         echo "METRO_VERSION=$VER" >> $GITHUB_ENV
  #         CNT=$(git rev-list HEAD --count)
  #         echo "METRO_COM_CNT=$CNT" >> $GITHUB_ENV
  #
  #     - name: Install Qt
  #       uses: jurplel/install-qt-action@v2
  #
  #
  #     - name: Compile and prepare dmg
  #       run: |
  #         echo "version is ${{ env.METRO_VERSION }}"
  #         echo "commits number is ${{ env.METRO_COM_CNT }}"
  #         mkdir build
  #         cd ./build
  #         mkdir installs
  #         MACOSX_DEPLOYMENT_TARGET=10.13
  #         export MACOSX_DEPLOYMENT_TARGET
  #         cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installs ../
  #         make -j 2
  #         make install
  #         make deploy
  #         make dmg
  #         cp installs/Metronomek*.dmg ../
  #         cd ..
  #         mv Metronomek*.dmg Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}.dmg
  #
  #     - name: Upload dmg to GitHub
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}.dmg
  #         path: /Users/runner/work/metronomek/metronomek/Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}.dmg


  upload_package:
    name:           Uploading to SF
    runs-on:        ubuntu-latest
    needs:          win_installer #macos_dmg

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set variables
        run: |
          VER=$(sed -n "9 p" CMakeLists.txt | awk -F" " '{ print $2 }' | sed 's/\"//g' | sed 's/)//g')
          echo "METRO_VERSION=$VER" >> $GITHUB_ENV
          CNT=$(git rev-list HEAD --count)
          echo "METRO_COM_CNT=$CNT" >> $GITHUB_ENV

      # - name: get bundle
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}.dmg

      - name: get installer
        uses: actions/download-artifact@v4
        with:
          name: Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}-Windows-Installer.exe

      # - name: Upload dmg to SF
      #   uses: burnett01/rsync-deployments@7.1.0
      #   with:
      #     switches: -avzr --delete
      #     path: Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}.dmg
      #     remote_path: ${{ secrets.REMOTE_PATH }}/testing/
      #     remote_host: ${{ secrets.SSH_HOST  }}
      #     remote_user: ${{ secrets.SSH_USER }}
      #     remote_key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Upload installer to SF
        uses: burnett01/rsync-deployments@7.1.0
        with:
          switches: -avzr --delete
          path: Metronomek-${{ env.METRO_VERSION }}-b${{ env.METRO_COM_CNT }}-Windows-Installer.exe
          remote_path: ${{ secrets.REMOTE_PATH }}/testing/
          remote_host: ${{ secrets.SSH_HOST  }}
          remote_user: ${{ secrets.SSH_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
